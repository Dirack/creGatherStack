#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# SConstruct  (Madagascar Script)
#
# Purpose: Kirchhoff Newton modeling of a multi layer velocity model.
#
# Site: https://dirack.github.io
# 
# Version 2.0
#
# Programer: Rodolfo A. C. Neves (Dirack) 04/03/2020
#
# Email: rodolfo_profissional@hotmail.com
#
# License: GPL-3.0 <https://www.gnu.org/licenses/gpl-3.0.txt>.

# Madagascar package
from rsf.proj import *

# Recipes
from rsf.recipes.pefInterpolation import pefInterpolation as pef
from rsf.recipes.kimodel import multiLayerModel as mlmod
from rsf.recipes.kimodel import kirchhoffNewtonModeling as kinewmod

# Establish building dependencies
Depends('interpolatedDataCube.rsf','multiLayerDataCube.rsf')
Depends('interpolatedDataCube2.rsf','interpolatedDataCube.rsf')
Depends('crsParameters-m0-0-t0-0.rsf','interpolatedDataCube2.rsf')

xmax = 6.0
zmax = 2.0

layers = ((0.30,0.50,0.20,0.30),
	  (1.65,1.85,1.55,1.65))

velocities = (1.508,
	      1.690,
	      2.0)

# Generate multi layer model and data cube
mlmod(interfaces='interfaces',
	dipsfile='interfacesDip',
	modelfile='mod1',
	xmax=xmax,
	zmax=zmax,
	layers=layers,
	velocities=velocities)

# Generate a modeled data cube
kinewmod(reflectors='interfaces',
	reflectorsDip='interfacesDip',
	filename='multiLayerDataCube',
	velocities=velocities,
	nt=1001,
	dt=0.004,
	ns=201,
	ds=0.025,
	nh=161,
	dh=0.025)

# PEF interpolation of the data cube
a1=10
a2=2
rect1=50
rect2=2

pef(dataCube='multiLayerDataCube',
    interpolated='interpolatedDataCube',
    nm=201,
    dm=0.025,
    nt=1001,
    dt=0.004,
    nhi=3,
    a1=a1,
    a2=a2,
    rect1=rect1,
    rect2=rect2)

# Do the PEF interpolation one more time
# to increase the CMP sampling
pef('interpolatedDataCube',
    'interpolatedDataCube2',
    nm=402,
    dm=0.0125,
    nt=1001,
    dt=0.004,
    nhi=3,
    a1=a1,
    a2=a2,
    rect1=rect1,
    rect2=rect2)

AddPostAction('interpolatedDataCube2.rsf',"./clean.sh")

End()
